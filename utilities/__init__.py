from __future__ import absolute_import, division, print_function

from .ioos import (buildSFOUrls, findSFOIndexs, uv2ws, uv2wd, isDataValid,
                   cycleAndGetData, find_nearest, processStationInfo,
                   coopsCurrentRequest, ndbcSOSRequest, get_hr_radar_dap_data,
                   extractSFOModelData)
from .pytools import (rot2d, shrink, get_roms, css_styles, to_html, make_map,
                      embed_html, get_coordinates, parse_url, url_lister,
                      time_limit, TimeoutException, make_qr, nbviewer_link,
                      save_html)
from .qaqc import (has_time_gaps, is_monotonically_increasing, is_flatline,
                   is_spike, threshold_series, filter_spikes, tukey53H)
from .secoora import (get_model_name, secoora2df, secoora_buoys,
                      load_secoora_ncs, fes_date_filter, service_urls,
                      collector2table, sos_request, get_ndbc_longname,
                      get_coops_metadata, pyoos2df, ndbc2df, nc2df, CF_names,
                      titles, fix_url, fetch_range, start_log, is_station)
from .skill_score import (both_valid, mean_bias, median_bias, rmse, r2,
                          apply_skill, low_pass)
from .taylor_diagram import TaylorDiagram
from .tardis import (is_model, z_coord, get_surface, time_coord, time_near,
                     time_slice, bbox_extract_2Dcoords, bbox_extract_1Dcoords,
                     subset, quick_load_cubes, proc_cube, add_mesh,
                     ensure_timeseries, add_station, remove_ssh,
                     save_timeseries, make_tree, is_water, get_nearest_series,
                     get_nearest_water)

from ._version import get_versions
__version__ = get_versions()['version']
del get_versions

__all__ = ['buildSFOUrls',
           'findSFOIndexs',
           'uv2ws',
           'uv2wd',
           'isDataValid',
           'cycleAndGetData',
           'find_nearest',
           'processStationInfo',
           'coopsCurrentRequest',
           'ndbcSOSRequest',
           'get_hr_radar_dap_data',
           'extractSFOModelData',
           'rot2d',
           'shrink',
           'get_roms',
           'css_styles',
           'to_html',
           'make_map',
           'embed_html',
           'get_coordinates',
           'parse_url',
           'url_lister',
           'time_limit',
           'TimeoutException',
           'make_qr',
           'nbviewer_link',
           'save_html',
           'has_time_gaps',
           'is_monotonically_increasing',
           'is_flatline',
           'is_spike',
           'threshold_series',
           'filter_spikes',
           'tukey53H',
           'get_model_name',
           'secoora2df',
           'secoora_buoys',
           'load_secoora_ncs',
           'fes_date_filter',
           'service_urls',
           'collector2table',
           'sos_request',
           'get_ndbc_longname',
           'get_coops_metadata',
           'pyoos2df',
           'ndbc2df',
           'nc2df',
           'CF_names',
           'titles',
           'fix_url',
           'fetch_range',
           'start_log',
           'save_timeseries',
           'is_station',
           'both_valid',
           'mean_bias',
           'median_bias',
           'rmse',
           'r2',
           'apply_skill',
           'low_pass',
           'TaylorDiagram',
           'is_model',
           'z_coord',
           'get_surface',
           'time_coord',
           'time_near',
           'time_slice',
           'bbox_extract_2Dcoords',
           'bbox_extract_1Dcoords',
           'subset',
           'quick_load_cubes',
           'proc_cube',
           'add_mesh',
           'ensure_timeseries',
           'add_station',
           'remove_ssh',
           'save_timeseries',
           'make_tree',
           'is_water',
           'get_nearest_series',
           'get_nearest_water',
           ]
